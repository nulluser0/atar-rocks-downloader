name: Rust

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Release - ${{ matrix.platform.os_name }}
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/tags/test-release'
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: atar-rocks-downloader
            name: atar-rocks-downloader-Linux-x86_64.tar.gz
            cross: false
            cargo_command: cargo

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-gnu
            bin: atar-rocks-downloader.exe
            name: atar-rocks-downloader-Windows-x86_64.zip
            cross: false
            cargo_command: cargo

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: atar-rocks-downloader
            name: atar-rocks-downloader-Darwin-x86_64.tar.gz
            cross: false
            cargo_command: cargo

          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: atar-rocks-downloader
            name: atar-rocks-downloader-Darwin-aarch64.tar.gz
            cross: false
            cargo_command: cargo

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib
        if: matrix.platform.os == 'ubuntu-20.04'

      - name: Build binary
        run: ${{ matrix.platform.cargo_command }} build --release --target ${{ matrix.platform.target }}

      - name: Strip binary
        run: strip target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os != 'windows-latest'

      - name: Package as archive
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.name }}
          path: target/${{ matrix.platform.name }}

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: target/${{ matrix.platform.name }}
          body_path: Changes.md
        if: startsWith(github.ref, 'refs/tags/v')